{
    "componentChunkName": "component---src-pages-tuneappserver-was-java-2-security-mdx",
    "path": "/tuneappserver/was-java-2-security/",
    "result": {"pageContext":{"frontmatter":{"title":"Tuning WAS Java 2 security","description":"Tuning WAS Java 2 security","tabs":["AppServer","JVM Settings","Thread Pools","JDBC Settings","JMS Settings","WAS Java 2 Security"]},"relativePagePath":"/tuneappserver/was-java-2-security.mdx","titleType":"page","MdxNode":{"id":"039efef9-7f95-5098-be91-0918fc403782","children":[],"parent":"e6a3f72b-00ca-5e54-ba0b-66d672cf395e","internal":{"content":"---\ntitle: Tuning WAS Java 2 security\ndescription: Tuning WAS Java 2 security\ntabs: ['AppServer','JVM Settings', 'Thread Pools', 'JDBC Settings', 'JMS Settings', 'WAS Java 2 Security']\n---\n\nThe recommendation is to turn off Java 2 security because Social Program Management (SPM) does not use it.\nThe WebSphere® Application Server (WAS) Java 2 security feature has a performance cost when it is turned on.\n\nIn WAS, when Java™ 2 security is turned on, every time Java code calls the classloader to load a class or a resource and so on,\nthe call goes through a synchronized block, then a security check, and potentially an access to the file system and then another security check.\nEffectively, the impact is twofold:\n\n* Performance degrades badly in low memory situations, as weak reference caches like ResourceBundles are constantly cleared and reloaded. Each reload means a call to the classloader, and hence going through a Java lock, security checks, and a file system access.\n* Even in a normal memory situation, it is a bottleneck because Java code that is calling the classloader goes through the lock and security checks.\n","type":"Mdx","contentDigest":"5048d8c6a1412a2d372d526b0a635a0d","owner":"gatsby-plugin-mdx","counter":117},"frontmatter":{"title":"Tuning WAS Java 2 security","description":"Tuning WAS Java 2 security","tabs":["AppServer","JVM Settings","Thread Pools","JDBC Settings","JMS Settings","WAS Java 2 Security"]},"exports":{},"rawBody":"---\ntitle: Tuning WAS Java 2 security\ndescription: Tuning WAS Java 2 security\ntabs: ['AppServer','JVM Settings', 'Thread Pools', 'JDBC Settings', 'JMS Settings', 'WAS Java 2 Security']\n---\n\nThe recommendation is to turn off Java 2 security because Social Program Management (SPM) does not use it.\nThe WebSphere® Application Server (WAS) Java 2 security feature has a performance cost when it is turned on.\n\nIn WAS, when Java™ 2 security is turned on, every time Java code calls the classloader to load a class or a resource and so on,\nthe call goes through a synchronized block, then a security check, and potentially an access to the file system and then another security check.\nEffectively, the impact is twofold:\n\n* Performance degrades badly in low memory situations, as weak reference caches like ResourceBundles are constantly cleared and reloaded. Each reload means a call to the classloader, and hence going through a Java lock, security checks, and a file system access.\n* Even in a normal memory situation, it is a bottleneck because Java code that is calling the classloader goes through the lock and security checks.\n","fileAbsolutePath":"/home/travis/build/IBM/spm-performance-tuning/src/pages/tuneappserver/was-java-2-security.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2610115429","2746626797","3037994772","768070550"]}