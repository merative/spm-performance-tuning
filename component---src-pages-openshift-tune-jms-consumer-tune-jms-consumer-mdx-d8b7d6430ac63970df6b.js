"use strict";(self.webpackChunkspm_performance_tuning=self.webpackChunkspm_performance_tuning||[]).push([[3050],{7907:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return k}});var a=n(3366),i=(n(7294),n(4983)),r=n(4295),o=["components"],l={},s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)}},p=s("AnchorLinks"),m=s("AnchorLink"),c=s("InlineNotification"),u={_frontmatter:l},d=r.Z;function k(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)(d,Object.assign({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(p,{small:!0,mdxType:"AnchorLinks"},(0,i.kt)(m,{mdxType:"AnchorLink"},"Overview"),(0,i.kt)(m,{mdxType:"AnchorLink"},"SPM configuration reference overrides"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Pod replica count"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Pod requests and limits"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Liberty thread pool"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Liberty JDBC configuration tuning"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Liberty JMS configuration tuning"),(0,i.kt)(m,{mdxType:"AnchorLink"},"Liberty JVM heap")),(0,i.kt)(c,{mdxType:"InlineNotification"},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:"),"  There are failover and performance considerations to be weighed which customers should evaluate and test, specific to their requirements and environment."),(0,i.kt)("p",null,"For more information see:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"IBM Documentation: ",(0,i.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=manually-configuring-liberty-session-persistence-database"},"Configuring Liberty session persistence to a database"),"."),(0,i.kt)("li",{parentName:"ul"},"IBM Documentation: ",(0,i.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=configuration-httpsessiondatabase"},"HTTP Session Database (httpSessionDatabase)"),"."),(0,i.kt)("li",{parentName:"ul"},"Additional Liberty tuning advice of the ",(0,i.kt)("a",{parentName:"li",href:"https://publib.boulder.ibm.com/httpserv/cookbook/WebSphere_Application_Server-WAS_Liberty.html#http-session-database-persistence"},"IBM WebSphere Application Server Performance Cookbook"),"."))),(0,i.kt)("h2",null,"Overview"),(0,i.kt)("p",null,"The term ",(0,i.kt)("strong",{parentName:"p"},"JMS consumer")," refers to the functional structure of SPM applications (for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"curam"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rest"),", etc.)\nas deployed in OpenShift such that the JMS reading and processing portion of the application is isolated from its client side functionality.\nThat is, SPM clients produce JMS messages that perform asynchronous operations, which are consumed by  ",(0,i.kt)("strong",{parentName:"p"},"JMS consumer")," pods.\nFor more information please review ",(0,i.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/spm/8.0.0?topic=architecture-transaction-isolation"},"Transaction isolation"),"."),(0,i.kt)("p",null,"Benefits of this separation include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Allowing unique tuning that caters to the type of work done in each pod type"),(0,i.kt)("li",{parentName:"ul"},"Separation of JMS/MQ put and get functionality"),(0,i.kt)("li",{parentName:"ul"},"Scale JMS consumer independently of the JMS producer"),(0,i.kt)("li",{parentName:"ul"},"Isolation of the Kubernetes services")),(0,i.kt)("h2",null,"SPM configuration reference overrides"),(0,i.kt)(c,{mdxType:"InlineNotification"},(0,i.kt)("p",null,"Sample override files are available in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/IBM/spm-kubernetes/tree/master/static/resources"},"spm-kubernetes/static/resources")," folder."),(0,i.kt)("p",null,"These samples illustrate basic deployment settings for several environments. All the settings are listed in the ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.github.io/spm-kubernetes/deployment/config-reference/"},"Configuration Reference")," topic.")),(0,i.kt)("p",null,"Helm charts allow for flexibility in specifying tuning settings.\nIn SPM deployments, tuning configuration settings can be made globally, by deployment type (e.g. consumer), or by application (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"curam"),")."),(0,i.kt)("p",null,"The list below that illustrates this tuning flexibility where ",(0,i.kt)("inlineCode",{parentName:"p"},"<applicationID>")," is replaced by the lower-case EAR file basename; that is, in the case of ",(0,i.kt)("inlineCode",{parentName:"p"},"Curam.ear")," use the value ",(0,i.kt)("inlineCode",{parentName:"p"},"curam"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"apps.global.tuningDefaults")," - global tuning"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"global.apps.config.<applicationID>.consumerTuning")," - dictionary containing tuning values specific to the consumer pods for that application"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"global.apps.config.<applicationID>")," - for the following keys:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jvm")," - Liberty JVM heap and other settings"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"replicaCount")," - the number of replicas"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"resources")," - varies by application"),(0,i.kt)("li",{parentName:"ul"},"The various keys from the ",(0,i.kt)("inlineCode",{parentName:"li"},"apps.tuningDefaults")," dictionary.")))),(0,i.kt)("p",null,"Further, ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.tuningDefaults.resources")," allows for fine tuning of a podâ€™s resources, overriding ",(0,i.kt)("inlineCode",{parentName:"p"},"global.apps.config.<applicationID>.resources"),"."),(0,i.kt)("h2",null,"Pod replica count"),(0,i.kt)("p",null,"The purpose of specifying a replica count is to maintain a stable set of replica Pods running at any given time. As such, it is often used to guarantee the availability of a specified number of identical Pods."),(0,i.kt)("p",null,"The OpenShift and Kubernetes documentation provide more information about replicas:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"OpenShift: ",(0,i.kt)("a",{parentName:"li",href:"https://docs.openshift.com/container-platform/4.7/applications/deployments/what-deployments-are.html#deployments-replicationcontrollers_what-deployments-are"},"Replication controllers")),(0,i.kt)("li",{parentName:"ul"},"Kubernetes: ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/"},"ReplicaSet"))),(0,i.kt)("p",null,"The number of replicas in a deployment can be specified globally via ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.replicaCount")," or via ",(0,i.kt)("inlineCode",{parentName:"p"},"global.apps.config.<applicationID>.replicaCount"),",\nwhere ",(0,i.kt)("inlineCode",{parentName:"p"},"<applicationID>")," is replaced by the lower-case EAR file basename (e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"curam"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"citizenportal"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rest"),", etc)."),(0,i.kt)("p",null,"The default is a single replica."),(0,i.kt)("p",null,"For example, an override file to specify two ",(0,i.kt)("inlineCode",{parentName:"p"},"curam")," replicas and four ",(0,i.kt)("inlineCode",{parentName:"p"},"rest")," replicas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        replicaCount: 2\n      rest:\n        replicaCount: 4\n...\n")),(0,i.kt)("p",null,"The number of replicas can also be specified at a more granular level for producer and consumer deployments.\nFor example, an override file to specify three ",(0,i.kt)("inlineCode",{parentName:"p"},"curam producer")," replicas and six ",(0,i.kt)("inlineCode",{parentName:"p"},"curam consumer")," replicas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        producerTuning:\n          replicaCount: 3\n        consumerTuning:\n          replicaCount: 6\n...\n")),(0,i.kt)("h2",null,"Pod requests and limits"),(0,i.kt)("p",null,"The OpenShift and Kubernetes documentation provide more information about requests and limits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"OpenShift: ",(0,i.kt)("a",{parentName:"li",href:"https://docs.openshift.com/container-platform/4.7/applications/quotas/quotas-setting-per-project.html"},"Resource quotas per project")),(0,i.kt)("li",{parentName:"ul"},"Kubernetes: ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"Managing Resources for Containers"))),(0,i.kt)("p",null,"The SPM Helm charts are coded to be able to specify ",(0,i.kt)("inlineCode",{parentName:"p"},"cpu")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"memory")," requests and limits. For instance, this shows the default settings for ",(0,i.kt)("inlineCode",{parentName:"p"},"curam")," application pods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        resources:\n          limits:\n            cpu: 2\n            memory: 4Gi\n          requests:\n            cpu: 2\n            memory: 4Gi\n...\n")),(0,i.kt)(c,{kind:"warning",mdxType:"InlineNotification"},(0,i.kt)("p",null,"For the Guaranteed QoS, SPM highly recommends that a pod must have ",(0,i.kt)("strong",{parentName:"p"},"both")," CPU and Memory requests and limits set to equal values. If requests & limits are different for a given pod, it would be eligible for rescheduling in case of resource pressure on its node."),(0,i.kt)("p",null,"For more information please review ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/#create-a-pod-that-gets-assigned-a-qos-class-of-guaranteed"},"Configure Quality of Service for Pods"),".")),(0,i.kt)("p",null,"These requests and limits can also be specified at a more granular level for producer and consumer deployments."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        producerTuning:\n          resources:\n            limits:\n              cpu: 2\n              memory: 3584Mi\n            requests:\n              cpu: 2\n              memory: 3584Mi\n        consumerTuning:\n          resources:\n            limits:\n              cpu: 2\n              memory: 2048Mi\n            requests:\n              cpu: 2\n              memory: 2048Mi\n...\n")),(0,i.kt)("h2",null,"Liberty thread pool"),(0,i.kt)("p",null,"The total number of threads that SPM uses in a consumer pod can be set initially to ",(0,i.kt)("inlineCode",{parentName:"p"},"((requested_cpu * 2)+1)"),". Setting the number of threads to twice the number of cores + 1 is based on experience that processing in SPM is usually split relatively equally between I/O and CPU."),(0,i.kt)("p",null,"The SPM Helm charts allow for overriding the WebSphere Liberty executor thread pool minimum (",(0,i.kt)("inlineCode",{parentName:"p"},"coreThreads"),") and maximum (",(0,i.kt)("inlineCode",{parentName:"p"},"maxThreads"),") settings either globally\n(e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.tuningDefaults.coreThreads"),") or per application as per the ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.github.io/spm-kubernetes/resources/tuning-values.yaml"},"Initial Tuning Settings"),"."),(0,i.kt)("p",null,"For example, a tuning specification of 8 threads for ",(0,i.kt)("inlineCode",{parentName:"p"},"curam")," consumer pods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        consumerTuning:\n          coreThreads: 9\n          maxThreads: 9\n...\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"coreThreads")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxThreads")," values map to the podâ€™s WebSphere Liberty configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/server.xml")," and setting values are populated via ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/server.env"),"."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<server>\n  ...\n  <executor coreThreads="${env.EX_CORE_THREADS}" maxThreads="${env.EX_MAX_THREADS}" />\n</server>\n')),(0,i.kt)("h2",null,"Liberty JDBC configuration tuning"),(0,i.kt)("h3",null,"Data source: ",(0,i.kt)("inlineCode",{parentName:"h3"},"jdbc/curamdb")),(0,i.kt)("p",null,"A Social Program Management (SPM) transaction can require two JDBC connections, one for the transaction itself and another one for the key server."),(0,i.kt)("p",null,"Therefore, size the ",(0,i.kt)("inlineCode",{parentName:"p"},"jdbc/curamdb")," data source connection pool to prevent deadlocks, with more connections available than threads that SPM uses."),(0,i.kt)("h3",null,"Data source: ",(0,i.kt)("inlineCode",{parentName:"h3"},"jdbc/curamtimerdb")),(0,i.kt)("p",null,"The EJB timer service is used by all SPM transactions, but only once per transaction, in our application infrastructure and at the very start of an SPM transaction. Currently, no reference to or usage of this service exists after the very start of an SPM transaction."),(0,i.kt)("p",null,"You can tune the size of the jdbc/curamtimerdb data source connection pool to be the same size as the number of threads, which would ensure that no contention can occur on the pool.\nHowever, given that the time that is spent using the EJB timer service is typically short compared to the duration of the transactions, a smaller size should work well without significant contention.\nSo our advice is to start with the default size, monitor the system, and then increase the size if evidence exists of a significant contention under normal conditions."),(0,i.kt)("h3",null,"Statement Cache Size"),(0,i.kt)("p",null,"As a starting value for SPM, set the data source prepared statement cache size for ",(0,i.kt)("inlineCode",{parentName:"p"},"jdbc/curamdb")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"1000"),".\nThen, monitor the cache use and increase it if discards occur. In our experience, preventing discards can increase throughput by up to 20%."),(0,i.kt)(c,{mdxType:"InlineNotification"},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," While we recommend an initial value of 1000 for the prepared statement cache to prevent discards,\nthis value can be too high for SPM-based systems that have many threads and that are memory constrained.\nIn that case, it is recommended to review the SQLStats from the JMX Stats, from either load tests or production.\nThen, use a simple heuristic based on the distribution of SQL executions to find a smaller cache size that covers around\n90% of SQL executions from the application and gives a better balance between system performance and Javaâ„¢ heap utilization.\nHowever, monitor prepared statement cache discards, system performance, and heap utilization, and adjust the cache size further as needed.")),(0,i.kt)("h3",null,"JDBC configuration tuning"),(0,i.kt)("p",null,"The WebSphere Liberty ",(0,i.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=configuration-datasource"},"JDBC configuration")," is tunable for each of these database definitions:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Database definitions"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"curamdb")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used by SPM applications")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"curamtimerdb")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used by the ",(0,i.kt)("a",{parentName:"td",href:"https://www.ibm.com/docs/en/spm/8.0.0?topic=behavior-cram-timer"},"SPM timer infrastructure"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"curamsessdb")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used for WebSphere Libertyâ€™s ",(0,i.kt)("a",{parentName:"td",href:"/spm-performance-tuning/openshift/tune_jms_producer/tune_jms_producer#liberty-http-session-replication"},"HTTP session replication"))))),(0,i.kt)("p",null,"The following yaml keys are provided for tuning the WebSphere Liberty JDBC configuration:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"maxPoolSize")," -  Maximum number of database connections:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamdb_maxPoolSize")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"(( max_threads * 2 ) + 1))")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamtimerdb_maxPoolSize")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"( max_threads + 1)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamsessdb_maxPoolSize"),"= ",(0,i.kt)("inlineCode",{parentName:"li"},"( max_threads + 1 )")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"numConnectionsPerThreadLocal")," - Number of connections to the database to be cached for each thread:"),(0,i.kt)(c,{mdxType:"InlineNotification"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Note:")," For SPM ",(0,i.kt)("em",{parentName:"p"},"numConnectionsPerThreadLocal")," should always be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"2"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," connection for the ",(0,i.kt)("inlineCode",{parentName:"p"},"keyserver")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," connection for the SPM database")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamdb_numConnectionsPerThreadLocal")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamtimerdb_numConnectionsPerThreadLocal")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamsessdb_numConnectionsPerThreadLocal")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"2")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"purgePolicy")," - Connections to be destroyed in the pool when a stale connection is detected:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamdb_purgePolicy")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"EntirePool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamtimerdb_purgePolicy")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"EntirePool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamsessdb_purgePolicy")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"EntirePool")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"statementCacheSize")," - Maximum number of cached statements per connection:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamdb_statementCacheSize")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"1000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamtimerdb_statementCacheSize")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"1000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"curamsessdb_statementCacheSize")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"1000"))))),(0,i.kt)("p",null,"The SPM Helm charts allow for overriding the JDBC configuration either globally\n(e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.tuningDefaults.curamdb_maxPoolSize"),") or per application as per the ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.github.io/spm-kubernetes/resources/tuning-values.yaml"},"Initial Tuning Settings")," examples provided.\nHere we illustrate tuning settings for curamdb in curam consumer pods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        consumerTuning:\n          # Curam Consumer Database Settings\n          curamdb_maxPoolSize: 19\n          curamdb_numConnectionsPerThreadLocal: 2\n          curamdb_purgePolicy: EntirePool\n          curamdb_statementCacheSize: 1000\n\n          curamtimerdb_maxPoolSize: 9\n          curamtimerdb_numConnectionsPerThreadLocal: 2\n          curamtimerdb_purgePolicy: EntirePool\n          curamtimerdb_statementCacheSize: 1000\n\n          curamsessdb_maxPoolSize: 1\n          curamsessdb_numConnectionsPerThreadLocal: 2\n          curamsessdb_purgePolicy: EntirePool\n          curamsessdb_statementCacheSize: 1000\n...\n")),(0,i.kt)("p",null,"The various keys in the preceding list map to the podâ€™s WebSphere Liberty configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/adc_conf/server_resources_jdbc.xml")," and the setting values are populated via ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/server.env"),".\nFor example, showing the relevant parts of the ",(0,i.kt)("inlineCode",{parentName:"p"},"curamdb")," configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<server>\n  <dataSource id="curamdb" jndiName="jdbc/curamdb"\n    statementCacheSize="${env.DS_CURAMDB_CACHE_SIZE}">\n    <connectionManager\n      maxPoolSize="${env.CM_CURAMDB_MAX_POOL_SIZE}"\n      numConnectionsPerThreadLocal="${env.CM_CURAMDB_CONN_PER_THREAD}"\n      purgePolicy="${env.CM_CURAMDB_PURGE_POLICY}"\n    />\n  </dataSource>\n</server>\n')),(0,i.kt)("h2",null,"Liberty JMS configuration tuning"),(0,i.kt)("p",null,"The WebSphere Liberty JMS configuration is tunable in two areas:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The JMS ",(0,i.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=configuration-jmsactivationspec"},"activation specifications")," associated with the six SPM JMS queues"),(0,i.kt)("li",{parentName:"ul"},"The JMS ",(0,i.kt)("a",{parentName:"li",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=configuration-jmsconnectionfactory#connectionManager"},"connection manager settings")," associated with the ",(0,i.kt)("inlineCode",{parentName:"li"},"CuramQueueConnectionFactory"))),(0,i.kt)("h3",null,"JMS Activation specification tuning"),(0,i.kt)("p",null,"There are six SPM activation specifications: ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/WorkflowEnactmentAS"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/WorkflowActivityAS"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/WorkflowErrorAS"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/DPEnactmentAS"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/DPErrorAS"),", & ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/CuramDeadMessageQueueAS"),".\nThe following table identifies the yaml sources and defaults of the WebSphere Liberty ",(0,i.kt)("inlineCode",{parentName:"p"},"maxEndpoints")," setting."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Activation specification"),(0,i.kt)("th",{parentName:"tr",align:null},"recommended tuning"),(0,i.kt)("th",{parentName:"tr",align:null},"Yaml key used if specific"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/WorkflowEnactmentAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxThreads")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_WorkflowEnactmentAS"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/WorkflowActivityAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxThreads")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_WorkflowActivityAS"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/DPEnactmentAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxThreads")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_DPEnactmentAS"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/WorkflowErrorAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_WorkflowErrorAS"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/DPErrorAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_DPErrorAS"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"eis/CuramDeadMessageQueueAS")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxEndPoints_CuramDeadMessageQueueAS"))))),(0,i.kt)("p",null,"The keys in the preceding table map to the podâ€™s WebSphere Liberty configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/adc_conf/server_resources_messaging.xml"),"\nand the ",(0,i.kt)("inlineCode",{parentName:"p"},"maxEndpoints")," values are populated via ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/server.env"),".\nFor example, showing the relevant parts of the ",(0,i.kt)("inlineCode",{parentName:"p"},"eis/WorkflowEnactmentAS")," configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<server>\n  ...\n  <jmsActivationSpec id="eis/WorkflowEnactmentAS" maxEndpoints="${env.CM_JMS_WORKFLOWENACTMENT_MAXENDPOINTS}">\n    ...\n  </jmsActivationSpec>\n</server>\n')),(0,i.kt)("p",null,"The SPM Helm charts allow for overriding the JMS configuration either globally\n(e.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.tuningDefaults.maxThreads"),") or per application as per the ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.github.io/spm-kubernetes/resources/tuning-values.yaml"},"Initial Tuning Settings")," examples provided.\nHere we illustrate tuning settings for curamdb in curam consumer pods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        consumerTuning:\n          maxEndPoints_DPErrorAS: 1\n          maxEndPoints_WorkflowErrorAS: 1\n          maxEndPoints_CuramDeadMessageQueueAS: 1\n          maxEndPoints_DPEnactmentAS: 9\n          maxEndPoints_WorkflowActivityAS: 9\n          maxEndPoints_WorkflowEnactmentAS: 9\n...\n")),(0,i.kt)("h3",null,"JMS connection manager tuning"),(0,i.kt)("p",null,"The following JMS connection manager settings, associated with the ",(0,i.kt)("inlineCode",{parentName:"p"},"CuramQueueConnectionFactory"),", can be tuned:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Connection manager setting"),(0,i.kt)("th",{parentName:"tr",align:null},"recommended tuning"),(0,i.kt)("th",{parentName:"tr",align:null},"Yaml key used if specific"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxPoolSize")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"max_thread + 1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.mqMaxPoolSize")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies the maximum number of physical connections for the connection pool")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"minPoolSize")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"max_thread + 1")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.mqMinPoolSize")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies the minimum number of physical connections for the connection pool")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"numConnectionsPerThreadLocal")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"6")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.mqNumConnectionsPerThreadLocal")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies the number of connections to cache for each executor thread")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxConnectionsPerThread")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"6")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"apps.<applicationID>.consumerTuning.maxJMSConnectionsPerThread")),(0,i.kt)("td",{parentName:"tr",align:null},"Limits the number of open connections on each thread")))),(0,i.kt)("p",null,"The keys in the preceding table map to the podâ€™s WebSphere Liberty configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/adc_conf/server_resources_messaging.xml"),"\nand the setting values are populated via ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/server.env")," as shown in this WebSphere Liberty configuration fragment:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<server>\n  ...\n  <connectionManager\n    id="ConMgr6"\n    maxPoolSize="${env.CM_MQ_MAXPOOLSIZE}"\n    minPoolSize="${env.CM_MQ_MINPOOLSIZE}"\n    numConnectionsPerThreadLocal="${env.CM_JMS_NUM_CONNECTIONS_PER_THREAD_LOCAL}"\n    maxConnectionsPerThread="${env.CM_JMS_MAX_CONNECTIONS_PER_THREAD}"\n  />\n</server>\n')),(0,i.kt)("p",null,"The SPM Helm charts allow for overriding the JMS configuration either globall (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"apps.tuningDefaults.maxThreads"),") or per application as per the ",(0,i.kt)("a",{parentName:"p",href:"https://ibm.github.io/spm-kubernetes/resources/tuning-values.yaml"},"Initial Tuning Settings")," examples provided.\nHere we illustrate tuning settings for curamdb in curam consumer pods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        consumerTuning:\n          mqMaxPoolSize: 10\n          mqMinPoolSize: 10\n          mqNumConnectionsPerThreadLocal: 6\n          maxJMSConnectionsPerThread: 6\n...\n")),(0,i.kt)("h2",null,"Liberty JVM heap"),(0,i.kt)("p",null,"WebSphere Liberty JVM options are specified via a yaml array in ",(0,i.kt)("inlineCode",{parentName:"p"},"global.apps.config.<applicationID>.jvm")," for all pod types of an application or for specific pod types such as consumer, via the ",(0,i.kt)("inlineCode",{parentName:"p"},"global.apps.config.<applicationID>.consumerTuning"),"\tdictionary of tuning values."),(0,i.kt)(c,{mdxType:"InlineNotification"},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," SPM recommends minimum memory setting per consumer pod of ",(0,i.kt)("inlineCode",{parentName:"p"},"2048Mi"),".")),(0,i.kt)("p",null,"Start with the following settings:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For a given consumer pod where ",(0,i.kt)("inlineCode",{parentName:"li"},"memory requests")," = ",(0,i.kt)("inlineCode",{parentName:"li"},"2048Mi"),", tune the JVM heap size by using the following example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -Xmx = 1600M\n  -Xms = 1600M\n  -Xmn = 960M\n")),(0,i.kt)("p",null,"JVM settings can also be specified at a more granular level for producer and consumer deployments."),(0,i.kt)("p",null,"Fragment showing JVM settings for the ",(0,i.kt)("inlineCode",{parentName:"p"},"curam")," JMS Consumer pods (as distinct from the ",(0,i.kt)("inlineCode",{parentName:"p"},"curam")," JMS Producer pods):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"global:\n  apps:\n    config:\n      curam:\n        consumerTuning:\n          jvm: ['-Xms1600M','-Xmx1600M','-Xmn960M']\n")),(0,i.kt)("p",null,"These settings are placed in the podâ€™s ",(0,i.kt)("inlineCode",{parentName:"p"},"/config/jvm.options")," file at deployment, for instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-Xms1600m\n-Xmx1600m\n-Xmn960m\n")))}k.isMDXComponent=!0},4295:function(e,t,n){n.d(t,{Z:function(){return y}});var a=n(7294),i=n(8650),r=n.n(i),o=n(5444),l=n(5426),s=n(1551),p=n(5900),m=n.n(p),c=function(e){var t,n=e.title,i=e.theme,r=e.tabs,o=void 0===r?[]:r;return a.createElement("div",{className:m()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=o.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===i,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},u=function(e){var t=e.relativePagePath,n=e.repository,i=(0,o.useStaticQuery)("1364590287").site.siteMetadata.repository,r=n||i,l=r.baseUrl,s=r.subDirectory,p=l+"/edit/"+r.branch+s+"/src/pages"+t;return l?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:p},"Edit this page on GitHub"))):null},d=n(4275),k=n(1721),h=function(e){function t(){return e.apply(this,arguments)||this}return(0,k.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,i=e.slug,l=i.split("/").filter(Boolean).slice(-1)[0],s=n.map((function(e){var t,n=r()(e,{lower:!0,strict:!0}),s=n===l,p=new RegExp(l+"/?(#.*)?$"),c=i.replace(p,n);return a.createElement("li",{key:e,className:m()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},a.createElement(o.Link,{className:"PageTabs-module--link--Kz-7R",to:""+c},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(a.Component),g=h,N=n(2881),f=n(6958),b=n(36),C=function(e){var t=e.date,n=new Date(t);return t?a.createElement(b.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(b.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},y=function(e){var t=e.pageContext,n=e.children,i=e.location,p=e.Title,m=t.frontmatter,k=void 0===m?{}:m,h=t.relativePagePath,b=t.titleType,y=k.tabs,v=k.title,S=k.theme,P=k.description,T=k.keywords,x=k.date,w=(0,f.Z)().interiorTheme,M=(0,o.useStaticQuery)("2456312558").site.pathPrefix,_=M?i.pathname.replace(M,""):i.pathname,E=y?_.split("/").filter(Boolean).slice(-1)[0]||r()(y[0],{lower:!0}):"",A=S||w;return a.createElement(s.Z,{tabs:y,homepage:!1,theme:A,pageTitle:v,pageDescription:P,pageKeywords:T,titleType:b},a.createElement(c,{title:p?a.createElement(p,null):v,label:"label",tabs:y,theme:A}),y&&a.createElement(g,{title:v,slug:_,tabs:y,currentTab:E}),a.createElement(N.Z,{padded:!0},n,a.createElement(u,{relativePagePath:h}),a.createElement(C,{date:x})),a.createElement(d.Z,{pageContext:t,location:i,slug:_,tabs:y,currentTab:E}),a.createElement(l.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-openshift-tune-jms-consumer-tune-jms-consumer-mdx-d8b7d6430ac63970df6b.js.map